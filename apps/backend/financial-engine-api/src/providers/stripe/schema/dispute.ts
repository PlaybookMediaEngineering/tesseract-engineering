import { z } from "zod";

export const disputeSchema = z.object({
  id: z.string(),
  object: z.literal("dispute"),
  amount: z.number().int(),
  balance_transactions: z.array(
    z.object({
      id: z.string(),
      object: z.literal("balance_transaction"),
      amount: z.number().int(),
      currency: z.string().length(3),
      description: z.string().nullable(),
      fee: z.number().int(),
      fee_details: z.array(
        z.object({
          amount: z.number().int(),
          application: z.string().nullable(),
          currency: z.string().length(3),
          description: z.string(),
          type: z.string(),
        }),
      ),
      net: z.number().int(),
      reporting_category: z.string(),
      source: z.string(),
      status: z.enum(["available", "pending"]),
      type: z.string(),
    }),
  ),
  charge: z.string(),
  created: z.number().int(),
  currency: z.string().length(3),
  evidence: z.object({
    access_activity_log: z.string().nullable(),
    billing_address: z.string().nullable(),
    cancellation_policy: z.string().nullable(),
    cancellation_policy_disclosure: z.string().nullable(),
    cancellation_rebuttal: z.string().nullable(),
    customer_communication: z.string().nullable(),
    customer_email_address: z.string().nullable(),
    customer_name: z.string().nullable(),
    customer_purchase_ip: z.string().nullable(),
    customer_signature: z.string().nullable(),
    duplicate_charge_documentation: z.string().nullable(),
    duplicate_charge_explanation: z.string().nullable(),
    duplicate_charge_id: z.string().nullable(),
    product_description: z.string().nullable(),
    receipt: z.string().nullable(),
    refund_policy: z.string().nullable(),
    refund_policy_disclosure: z.string().nullable(),
    refund_refusal_explanation: z.string().nullable(),
    service_date: z.string().nullable(),
    service_documentation: z.string().nullable(),
    shipping_address: z.string().nullable(),
    shipping_carrier: z.string().nullable(),
    shipping_date: z.string().nullable(),
    shipping_documentation: z.string().nullable(),
    shipping_tracking_number: z.string().nullable(),
    uncategorized_file: z.string().nullable(),
    uncategorized_text: z.string().nullable(),
  }),
  evidence_details: z.object({
    due_by: z.number().int(),
    has_evidence: z.boolean(),
    past_due: z.boolean(),
    submission_count: z.number().int(),
  }),
  is_charge_refundable: z.boolean(),
  livemode: z.boolean(),
  metadata: z.record(z.string()),
  payment_intent: z.string().nullable(),
  reason: z.enum([
    "bank_cannot_process",
    "check_returned",
    "credit_not_processed",
    "customer_initiated",
    "debit_not_authorized",
    "duplicate",
    "fraudulent",
    "general",
    "incorrect_account_details",
    "insufficient_funds",
    "product_not_received",
    "product_unacceptable",
    "subscription_canceled",
    "unrecognized",
  ]),
  status: z.enum([
    "warning_needs_response",
    "warning_under_review",
    "warning_closed",
    "needs_response",
    "under_review",
    "charge_refunded",
    "won",
    "lost",
  ]),
});

export type Dispute = z.infer<typeof disputeSchema>;
