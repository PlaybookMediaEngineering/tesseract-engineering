import { z } from "zod";

export const stripeTransactionSchema = z.object({
  id: z.string(),
  object: z.literal("transaction"),
  amount: z.number(),
  available_on: z.number(),
  created: z.number(),
  currency: z.string().length(3),
  description: z.string().nullable(),
  fee: z.number(),
  fee_details: z.array(
    z.object({
      amount: z.number(),
      application: z.string().nullable(),
      currency: z.string().length(3),
      description: z.string(),
      type: z.string(),
    }),
  ),
  net: z.number(),
  reporting_category: z.string().nullable(),
  source: z.string().nullable(),
  type: z.enum([
    "adjustment",
    "advance",
    "advance_funding",
    "anticipation_repayment",
    "application_fee",
    "application_fee_refund",
    "charge",
    "climate_order_purchase",
    "climate_order_refund",
    "connect_collection_transfer",
    "contribution",
    "issuing_authorization_hold",
    "issuing_authorization_release",
    "issuing_dispute",
    "issuing_transaction",
    "obligation_outbound",
    "obligation_reversal_inbound",
    "payment",
    "payment_failure_refund",
    "payment_network_reserve_hold",
    "payment_network_reserve_release",
    "payment_refund",
    "payment_reversal",
    "payment_unreconciled",
    "payout",
    "payout_cancel",
    "payout_failure",
    "refund",
    "refund_failure",
    "reserve_transaction",
    "reserved_funds",
    "stripe_fee",
    "stripe_fx_fee",
    "tax_fee",
    "topup",
    "topup_reversal",
    "transfer",
    "transfer_cancel",
    "transfer_failure",
  ]),
  exchange_rate: z.number().nullable(),
});

export type StripeTransaction = z.infer<typeof stripeTransactionSchema>;
